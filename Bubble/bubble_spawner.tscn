[gd_scene load_steps=3 format=3 uid="uid://da2c5oft4ofl0"]

[ext_resource type="PackedScene" uid="uid://cen2h7vv1boka" path="res://Bubble/bubble.tscn" id="1_34eb8"]

[sub_resource type="GDScript" id="GDScript_m0053"]
resource_name = "bubble_spawner"
script/source = "extends Node3D

# Inspector configurable properties
@export var bubble_scene: PackedScene
@export var spawn_timer_duration: float = 1.0
@export var spawn_line_length: float = 10.0
@export var spawn_line_direction: Vector3 = Vector3.FORWARD
@export var random_rotation: bool = true
@export var bubble_spawn_variation: Vector2 = Vector2(1.0, 1.0)  # X,Y variation perpendicular to line

# Private variables
var _timer: Timer
var _rng = RandomNumberGenerator.new()

func _ready():
    # Initialize the random number generator
    _rng.randomize()
    
    # Create and configure the timer
    _timer = Timer.new()
    _timer.wait_time = spawn_timer_duration
    _timer.one_shot = false
    _timer.autostart = true
    _timer.connect(\"timeout\", Callable(self, \"_on_timer_timeout\"))
    add_child(_timer)

func _on_timer_timeout():
    # Make sure we have a bubble scene assigned
    if bubble_scene == null:
        push_error(\"BubbleSpawner3D: No bubble scene assigned!\")
        return
    
    # Calculate a random position along the line
    var normalized_direction = spawn_line_direction.normalized()
    
    # Get a random position along the line
    var random_distance = _rng.randf_range(0, spawn_line_length)
    var random_position = global_position + normalized_direction * random_distance

    # Spawn the bubble
    spawn_bubble(random_position)

func spawn_bubble(position: Vector3):
    # Instance the bubble scene
    var bubble_instance = bubble_scene.instantiate()
    
    # Set the bubble's position
    bubble_instance.global_position = position
    
    # Optionally add random rotation
    if random_rotation:
        bubble_instance.rotation = Vector3(
            _rng.randf_range(0, TAU),
            _rng.randf_range(0, TAU),
            _rng.randf_range(0, TAU)
        )
    
    # Add the bubble to the scene
    get_tree().get_root().add_child(bubble_instance)

# Optional method to manually trigger a bubble spawn
func spawn_bubble_now():
    _on_timer_timeout()

# You can call this to start/stop the spawner
func set_spawning(enabled: bool):
    if enabled:
        _timer.start()
    else:
        _timer.stop()
"

[node name="BubbleSpawner" type="Node3D"]
script = SubResource("GDScript_m0053")
bubble_scene = ExtResource("1_34eb8")
spawn_line_length = 12.48
random_rotation = false
